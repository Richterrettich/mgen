package util;

<%=@licence%>

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import <%=@package%>.model.BaseEntity;
import org.springframework.cloud.client.ServiceInstance;
import org.springframework.http.MediaType;

import java.net.URI;
import java.nio.charset.Charset;

/**
 * Utility class for testing.
 * @author <%=@user_name%>
 */
public class TestUtil {

  public static final MediaType APPLICATION_JSON_UTF8 =
      new MediaType(MediaType.APPLICATION_JSON.getType(),
          MediaType.APPLICATION_JSON.getSubtype(),
          Charset.forName("utf8"));

  /**
  * Converts an object to json (as bytes).
  *
  * @param object the object to convert
  * @return JSON as bytes.
  * @throws JsonProcessingException   thrown by jackson objectmapper
  */
  public static byte[] toJson(BaseEntity object) throws JsonProcessingException {
    ObjectMapper mapper = new ObjectMapper();
    return mapper.writeValueAsBytes(object);
  }


  /**
  * Mocks a ServiceInstance.
  * @param serviceName the name of the service.
  * @return the mock.
  */
  public static ServiceInstance mockServiceInstance(String serviceName) {
    ServiceInstance result = new ServiceInstance() {
      @Override
      public String getServiceId() {
        return serviceName;
      }

      @Override
      public String getHost() {
        return "localhost";
      }

      @Override
      public int getPort() {
        return 80;
      }

      @Override
      public boolean isSecure() {
        return false;
      }

      @Override
      public URI getUri() {
        return URI.create("http://localhost/" + serviceName);
      }
    };
    return  result;
  }
}